@inject ITimeboxService _timeboxService
@using BlazorCalendar.Models
@using TimeSlice.WebApp.Services.Base
@using TimeSlice.WebApp.Services.Timebox
<MudDialog>
    <TitleContent>
        <MudText>@($"{Task.DateStart.ToString( "HH:mm" )} - {Task.DateEnd.ToString( "HH:mm" )}")</MudText>
    </TitleContent>
    <DialogContent>
        <MudInput AutoFocus=true Placeholder="Add caption" Label="Caption" @bind-Value="Task.Code" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        @if(Task.Id != -1 )
        {
            <MudButton Color="Color.Error" OnClick="Delete">Delete</MudButton>            
        }        
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public TimeboxEntryDto Task { get; set; } = new TimeboxEntryDto();
    void Cancel() => MudDialog.Cancel();

    private async void Submit()
    {
        Response<int> response;

        if (IsCreateNew())
        {
            response = await _timeboxService.Create( Task );
        }
        else
        {
            response = await _timeboxService.Update( Task.Id, Task );
        }

        MudDialog.Close(DialogResult.Ok(true));
    }

    private bool IsCreateNew()
    {
        return Task.Id == -1;
    }

    public async Task Delete()
    {
        if (Task.Id == -1)
        {
            return;
        }

        var response = await _timeboxService.Delete( Task.Id );
        MudDialog.Close( DialogResult.Ok( true ) );
    }
}